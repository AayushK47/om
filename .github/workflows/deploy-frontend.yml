name: Deploy Apps

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set Expo Token
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      - name: Set Production API URL
        run: echo "EXPO_PUBLIC_API_URL=https://om-backend-latest.onrender.com/api" >> $GITHUB_ENV

      - name: Build Android (APK)
        working-directory: ./frontend
        run: |
          eas build --platform android --profile production --non-interactive --json > android.json
          cat android.json
          echo "ANDROID_URL=$(jq -r '.[0].artifacts.buildUrl' android.json)" >> $GITHUB_ENV

      # - name: Build iOS (IPA)
      #   working-directory: ./frontend
      #   run: |
      #     eas build --platform ios --profile production --non-interactive --json > ios.json
      #     cat ios.json
      #     echo "IOS_URL=$(jq -r '.[0].artifacts.buildUrl' ios.json)" >> $GITHUB_ENV

      - name: Download Android APK
        run: |
          curl -L $ANDROID_URL -o app-android.apk

      # - name: Download iOS IPA
      #   run: |
      #     curl -L $IOS_URL -o app-ios.ipa

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: "Production Build #${{ github.run_number }}"
          body: "Automated production build of the Expo app.
          files: |
            app-android.apk
            app-ios.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}